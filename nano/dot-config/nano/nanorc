# Make 'nextword' (Ctrl+Right) and 'chopwordright' (Ctrl+Delete)
# stop at word ends instead of at beginnings.
set afterends

# When soft line wrapping is enabled, make it wrap lines at blanks
# (tabs and spaces) instead of always at the edge of the screen.
set atblanks

# Automatically indent a newly created line to the same number of
# tabs and/or spaces as the preceding line -- or as the next line
# if the preceding line is the beginning of a paragraph.
set autoindent

# Use bold text instead of reverse video text.
set boldtext

# Constantly display the cursor position in the status bar or minibar.
set constantshow

# Remember the used search/replace strings for the next session.
set historylog

# Display a "scrollbar" on the righthand side of the edit window.
set indicator

# Display line numbers to the left (and any anchors in the margin).
set linenumbers

# Fall back to slow libmagic to try and determine an applicable syntax.
set magic

# Suppress the title bar and show the filename plus a cursor-position
# percentage in the space of the status bar.
set minibar

# Switch on multiple file buffers (inserting a file will put it into
# a separate buffer).
set multibuffer

# Don't display the helpful shortcut lists at the bottom of the screen.
set nohelp

# Remember the cursor position in each file for the next editing session.
set positionlog

# Make the Home key smarter: when Home is pressed anywhere but at the
# very beginning of non-whitespace characters on a line, the cursor
# will jump to that beginning (either forwards or backwards).  If the
# cursor is already at that position, it will jump to the true start
# of the line (the left edge).
set smarthome

# Spread overlong lines over multiple screen lines.
set softwrap

# Use the end of the title bar for some state flags: I = auto-indenting,
# M = mark, L = hard-wrapping long lines, R = recording, S = soft-wrapping.
set stateflags

# Use this tab size instead of the default; it must be greater than 0.
set tabsize 4

# Convert each typed tab to the fitting number of spaces.                                                                                                                                                      
set tabstospaces

# Snip whitespace at the end of lines when justifying or hard-wrapping.
set trimblanks

# Let an unmodified Backspace or Delete erase the marked region (instead
# of a single character, and without affecting the cutbuffer).
set zap

# The <Ctrl+Delete> keystroke deletes the word to the right of the cursor.
# On some terminals the <Ctrl+Backspace> keystroke produces ^H, which is
# the ASCII character for backspace, so it is bound by default to the
# backspace function.  The <Backspace> key itself produces a different
# keycode, which is hard-bound to the backspace function.  So, if you
# normally use <Backspace> for backspacing and not ^H, you can make
# <Ctrl+Backspace> delete the word to the left of the cursor with:
bind ^H chopwordleft main
